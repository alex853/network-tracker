<%@ page import="actions.analyze_ng.DBOps" %>
<%@ page import="actions.analyze_ng.ReportInfo" %>
<%@ page import="java.sql.Connection" %>
<%@ page import="actions.analyze_ng.ReportPilotPosition" %>
<%@ page import="java.util.*" %>
<%@ page import="java.text.SimpleDateFormat" %>
<%@ page import="forge.commons.db.DB" %>
<%@ page import="web.*" %>

<%
    String pilotIdStr = request.getParameter("pilotId");
    int pilotId = Integer.parseInt(pilotIdStr);

%>

<html>
<head>
    <title>Pilot <%=pilotId%></title>
    <style type="text/css">
        .onLevel {
            color: RGB( 100, 200, 100 )
        }

        .outOfLevel {
            color: red
        }

        .low {
            color: RGB( 220, 220, 220 )
        }

        .onLevelCorrectDir {
            color: RGB( 100, 200, 100 )
        }

        .onLevelIncorrectDir {
            color: RGB( 255, 100, 30 )
        }
    </style>
</head>

<body style="background-color: RGB(250, 250, 250)">


<%

    ReportInfo newestReport = DBOps.findNewestReport();
    List<ReportInfo> reports = DBOps.loadNPreviousReports(newestReport.getReportId(), 30);

    Online_PilotInfo pilotInfo = new Online_PilotInfo(pilotId, null);

    for (ReportInfo eachReport : reports) {
        Connection connx = DB.getConnection();
        ReportPilotPosition position = DBOps.loadPilotPosition(connx, eachReport, pilotId);
        connx.close();

        if (position != null) {
            pilotInfo.putReportPosition(position);
        }
    }


%>


<table cellspacing="3">
    <tr>
        <td>Time</td>
    </tr>

    <%

        for (ReportInfo eachReport : reports) {

    %>
    <tr>
        <td><%=new SimpleDateFormat("HH:mm").format(eachReport.getReportDt())%></td>
        <%

            ReportPilotPosition position = pilotInfo.getPosition(eachReport.getReportId());


            if (position != null) {

                AltQNH alt = AltQNH.get(position);
                int altitude = alt.getAltitude();

                boolean low = altitude < 9500;

                LevelSystem levelSystem = LevelSystem.RVSM;
                FL nearest = levelSystem.getNearest(altitude);
                boolean onLevel = nearest.isOnLevel(altitude);

                int heading = position.getHeading();
                Direction direction = Direction.eastWestByHeading(heading);
                boolean correctDir = nearest.getDirection() == direction;

                String tdClass =
                        low ? "low" : (
                                onLevel ? (
                                        correctDir ? "onLevelCorrectDir" : "onLevelIncorrectDir") : "outOfLevel");

        %>
        <td class="<%=tdClass%>"><%=FLCalc.printFL(alt.getActualFlightLevel())%></td>
        <td class="<%=tdClass%>"><%=onLevel ? nearest : ""%></td>
        <td><%=heading%></td>
        <td><%=direction%></td>
        <td><%=levelSystem.getName()%></td>
        <%


            }
        %>
    </tr>
    <%
        }

    %>

</table>


</body>
</html>